# 정수 i를 1로 만드는 최소 연산 횟수: d[i]

# x 가 5로 나누어떨어지면, 5로 나눈다.  d[i / 5] + 1
# x 가 3으로 나누어떨어지면, 3으로 나눈다. d[i / 3] + 1
# x 가 2로 나누어떨어지면, 2로 나눈다. d[i / 2] + 1
# x 에서 1을 뺀다. d[i - 1] + 1


def min_count(x):
    # DP 테이블 초기화
    dp = [0] * (x + 1)

    # 2부터 x 까지 최소 연산 횟수 계산. (dp[1] 은 0 이기 때문.)
    for i in range(2, x + 1):
        # 현재 수에서 1을 빼는 경우
        dp[i] = dp[i - 1] + 1
        # 현재의 수가 2로 나누어 떨어지는 경우
        if i % 2 == 0:
            dp[i] = min(dp[i], dp[i // 2] + 1)  # 해당 연산을 수행했을 때 vs 이전에 계산된 최소값 중 작은 값 계산
        # 현재의 수가 3으로 나누어 떨어지는 경우
        if i % 3 == 0:
            dp[i] = min(dp[i], dp[i // 3] + 1)
        # 현재의 수가 5로 나누어 떨어지는 경우
        if i % 5 == 0:
            dp[i] = min(dp[i], dp[i // 5] + 1)
    return dp[x]

print(min_count(6))

